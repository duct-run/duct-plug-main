# vim: set ft=sh syn=bash :
# shellcheck shell=bash

#
# Copyright (C) 2022-2023 Chris 'sh0shin' Frage
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License, version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

# @plug duct-curl
# @desc curl operations.

# @func duct curl

# @fvar Options for `curl` (defaults).
declare -r -a _DUCT_CURL_OPTIONS=(
  --fail
  --location
  --retry 3
  --show-error
  --silent
)

# @fvar URL(s) to run `curl` at (defaults).
declare -r -a _DUCT_CURL_URL=()

# @fvar Curl binary to use.
declare -g DUCT_CURL_BINARY="${DUCT_CURL_BINARY:-"curl"}"

# @fvar Options for `curl`.
declare -g -a DUCT_CURL_OPTIONS=( "${DUCT_CURL_OPTIONS[@]:-${_DUCT_CURL_OPTIONS[@]}}" )

# shellcheck disable=SC2206
# @fvar URL(s) to run `curl` at.
declare -g -a DUCT_CURL_URL=( ${DUCT_CURL_URL[@]:-${_DUCT_CURL_URL[@]}} )

# @desc Run `curl` and mask secrets (see `duct-run`).
# @intl false
# @life core
# @deps duct-run
# @opts [url]
__duct_curl() {
  local -a CURL_URL=( "${@:-${DUCT_CURL_URL[@]}}" )
  local CURL_RC=0

  __duct_run curl "${DUCT_CURL_OPTIONS[@]}" "${CURL_URL[@]}" || CURL_RC=$?
  return $CURL_RC
}

# @func duct curl load

# @fvar List of duct-curl requirements.
declare -r -a _DUCT_CURL_LOAD_REQUIREMENTS=(
  "$DUCT_CURL_BINARY"
)

# @fvar Minimum supported curl version.
declare -r _DUCT_CURL_LOAD_CURL_VERSION="7.29.0"

# @desc Check duct-curl requirements.
# @intl true
# @life main
# @deps
# @opts
__duct_curl_load() {
  __duct_intl

  local CURL_LOAD_RC=0

  __duct_bin_check "${_DUCT_CURL_LOAD_REQUIREMENTS[@]}" || CURL_LOAD_RC=$?

  if [[ "$CURL_LOAD_RC" -gt 0 ]]
  then
    return $CURL_LOAD_RC
  fi

  __duct_ver_check "curl" "$_DUCT_CURL_LOAD_CURL_VERSION" 2 || CURL_LOAD_RC=$?

  return $CURL_LOAD_RC
}
