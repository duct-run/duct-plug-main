# vim: set ft=sh syn=bash :
# shellcheck shell=bash

#
# Copyright (C) 2022-2023 Chris 'sh0shin' Frage
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License, version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

# @plug duct-gnu
# @desc GNU tools.

# @func gnu load

# @desc Check GNU tools prerequisites.
# @intl true
# @life core
# @deps duct-run
# @opts
__duct_gnu_load() {
  local GNU_LOAD_RC=0

  __duct_intl

  # check gnu tools
  __duct_gnu_tools || GNU_LOAD_RC=$?

  if [[ "$GNU_LOAD_RC" -gt 0 ]]
  then
    __duct_msg w "gnu tools incomplete!"
  fi
}

# @func gnu tools

# @fvar GNU tools mapping (set at runtime).
declare -g -A DUCT_GNU_TOOLS=()

# GNU tools mapping (defaults).
declare -g DUCT_GNU_TOOLS["awk"]="awk"
declare -g DUCT_GNU_TOOLS["grep"]="grep"
declare -g DUCT_GNU_TOOLS["sed"]="sed"
declare -g DUCT_GNU_TOOLS["tar"]="tar"

# @desc Set GNU tools to the OS based binaries.
# @intl true
# @life core
# @deps duct-run
# @opts
__duct_gnu_tools() {
  local -A GNU_TOOLS_MAP
  local GNU_TOOLS_BIN
  local GNU_TOOLS_RC=0
  local GNU_TOOLS_SET

  __duct_intl

  case "$DUCT_OSTYPE"
  in
    darwin)
      GNU_TOOLS_MAP["awk"]="gawk"
      GNU_TOOLS_MAP["grep"]="ggrep"
      GNU_TOOLS_MAP["sed"]="gsed"
      GNU_TOOLS_MAP["tar"]="gtar"
    ;;
    freebsd)
      GNU_TOOLS_MAP["awk"]="gawk"
      GNU_TOOLS_MAP["grep"]="grep"
      GNU_TOOLS_MAP["sed"]="gsed"
      GNU_TOOLS_MAP["tar"]="gtar"
    ;;
    linux*)
      GNU_TOOLS_MAP["awk"]="gawk"
      GNU_TOOLS_MAP["grep"]="grep"
      GNU_TOOLS_MAP["sed"]="sed"
      GNU_TOOLS_MAP["tar"]="tar"
    ;;
    *)
      __duct_msg e "$DUCT_OSTYPE currently unsupported!"
      return 1
    ;;
  esac

  for GNU_TOOLS_SET in "${!DUCT_GNU_TOOLS[@]}"
  do
    GNU_TOOLS_BIN="$( command -v "${GNU_TOOLS_MAP[$GNU_TOOLS_SET]}" || command -v "${DUCT_GNU_TOOLS[$GNU_TOOLS_SET]}" || :)"

    if [[ -n "$GNU_TOOLS_BIN" ]]
    then
      if [[ $( command "$GNU_TOOLS_BIN" --version || : ) =~ (GNU) ]]
      then
        __duct_msg d "'$GNU_TOOLS_BIN' gnu version found"
        DUCT_GNU_TOOLS[$GNU_TOOLS_SET]="${GNU_TOOLS_MAP[$GNU_TOOLS_SET]}"
      else
        __duct_msg w "'$GNU_TOOLS_BIN' not a gnu version!"
        (( GNU_TOOLS_RC+=1 ))
      fi
    else
      __duct_msg e "${GNU_TOOLS_MAP[$GNU_TOOLS_SET]} not found!"
      (( GNU_TOOLS_RC+=1 ))
    fi
  done

  if [[ "$GNU_TOOLS_RC" -gt 0 ]]
  then
    return 1
  fi
}

# @func gnu awk

# @desc Run GNU version of `awk` (if available).
# @intl false
# @life core
# @deps duct-run
# @opts <awk-options>
__duct_gnu_awk() {
  if [[ "${FUNCNAME[1]}" == "duct" ]]
  then
    # external
    __duct_run "${DUCT_GNU_TOOLS["awk"]}" "$@"
  else
    # internal
    command "${DUCT_GNU_TOOLS["awk"]}" "$@"
  fi
}

# @func gnu grep

# @desc Run GNU version of `grep` (if available).
# @intl false
# @life core
# @deps duct-run
# @opts <grep-options>
__duct_gnu_grep() {
  if [[ "${FUNCNAME[1]}" == "duct" ]]
  then
    # external
    __duct_run "${DUCT_GNU_TOOLS["grep"]}" "$@"
  else
    # internal
    command "${DUCT_GNU_TOOLS["grep"]}" "$@"
  fi
}

# @func gnu sed

# @desc Run GNU version of `sed` (if available).
# @intl false
# @life core
# @deps duct-run
# @opts <sed-options>
__duct_gnu_sed() {
  if [[ "${FUNCNAME[1]}" == "duct" ]]
  then
    # external
    __duct_run "${DUCT_GNU_TOOLS["sed"]}" "$@"
  else
    # internal
    command "${DUCT_GNU_TOOLS["sed"]}" "$@"
  fi
}

# @func gnu tar

# @desc Run GNU version of `tar` (if available).
# @intl false
# @life core
# @deps duct-run
# @opts <tar-options>
__duct_gnu_tar() {
  if [[ "${FUNCNAME[1]}" == "duct" ]]
  then
    # external
    __duct_run "${DUCT_GNU_TOOLS["tar"]}" "$@"
  else
    # internal
    command "${DUCT_GNU_TOOLS["tar"]}" "$@"
  fi
}
