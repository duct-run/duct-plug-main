# vim: set ft=sh syn=bash :
# shellcheck shell=bash

#
# Copyright (C) 2022-2023 Chris 'sh0shin' Frage
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License, version 3,
# as published by the Free Software Foundation.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program. If not, see <https://www.gnu.org/licenses/>.
#

# @plug duct-apk
# @desc Alpine Linux APK operations.

# @func duct apk

# APK options (defaults).
declare -a -r _DUCT_APK_OPTIONS=(
  --latest
  --no-cache
  --prune
  --purge
  --upgrade
)

# APK packages (defaults).
declare -a -r _DUCT_APK_PACKAGES=()

# APK binary to use.
declare -g DUCT_APK_BINARY="${DUCT_APK_BINARY:-"apk"}"

# Use `sudo` for APK operations (auto disabled for uid 0).
declare -g DUCT_APK_SUDO="${DUCT_APK_SUDO:-true}"

# Enable/disable APK update run.
declare -g DUCT_APK_UPDATE="${DUCT_APK_UPDATE:-true}"

# Enable/disable APK upgrade run.
declare -g DUCT_APK_UPGRADE="${DUCT_APK_UPGRADE:-true}"

# APK options.
declare -g -a DUCT_APK_OPTIONS=( "${DUCT_APK_OPTIONS[@]:-${_DUCT_APK_OPTIONS[@]}}" )

# shellcheck disable=SC2206
# APK packages to install.
declare -g -a DUCT_APK_PACKAGES=( ${DUCT_APK_PACKAGES[@]:-${_DUCT_APK_PACKAGES[@]}} )

# @desc Update, upgrade & install APK packages.
# @intl false
# @life main
# @deps duct-msg duct-run
# @opts [packages]
__duct_apk() {
  __duct_deps duct-msg duct-run

  # shellcheck disable=SC2206
  local -a APK_PACKAGES=( ${DUCT_APK_PACKAGES[@]:-$@} )
  local APK_SUDO=""

  if [[ "$DUCT_APK_SUDO" == true ]]
  then
    APK_SUDO="sudo"

  elif [[ "$UID" -gt 0 ]]
  then
    __duct_msg d "forcing sudo for $UID"
    APK_SUDO="sudo"
  fi

  if [[ "$UID" -eq 0 ]]
  then
    __duct_msg d "disable sudo for $UID"
    APK_SUDO=""
  fi

  # shellcheck disable=SC2086
  if [[ "$DUCT_APK_UPDATE"  == true ]] || [[ "$DUCT_APK_UPGRADE" == true ]]
  then
    __duct_run $APK_SUDO "$DUCT_APK_BINARY" update
  fi

  # shellcheck disable=SC2086
  if [[ "$DUCT_APK_UPGRADE" == true ]]
  then
    __duct_run $APK_SUDO "$DUCT_APK_BINARY" upgrade "${DUCT_APK_OPTIONS[@]}"
  fi

  # shellcheck disable=SC2086
  if [[ "${#APK_PACKAGES[@]}" -gt 0 ]]
  then
    __duct_run $APK_SUDO "$DUCT_APK_BINARY" add "${DUCT_APK_OPTIONS[@]}" "${APK_PACKAGES[@]}"
  fi
}

# @func duct apk load

# @fvar List of duct-apk requirements.
declare  -r -a _DUCT_APK_LOAD_REQUIREMENTS=(
  "$DUCT_APK_BINARY"
)

# @desc Check duct-apk requirements.
# @intl true
# @life main
# @deps duct-core
# @opts
__duct_apk_load() {
  __duct_intl
  __duct_bin_check "${_DUCT_APK_LOAD_REQUIREMENTS[@]}"
}
